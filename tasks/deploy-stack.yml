# These tasks are included once per shipyard_stack

- name: "Gather some facts about {{ shipyard_stack.name }}"
  set_fact:
    chart_path: "{{ shipyard_charts_path }}/{{ shipyard_stack.chart }}"
    stack_remote_path: "/opt/shipyard/stacks/{{ shipyard_stack.name }}"
    # Lookup default values from the Chart
    default_values: "{{ lookup('file', '{{ shipyard_charts_path }}/{{ shipyard_stack.chart }}/values.yaml') | from_yaml }}"
    # Lookup values from the Stack
    stack_values: "{{ lookup('file', '{{shipyard_stacks_path}}/{{ shipyard_stack.name }}/values.yaml', errors='ignore') | from_yaml | default({}, true) }}"
    stack_values_sops: "{{ lookup('community.sops.sops', '{{shipyard_stacks_path}}/{{ shipyard_stack.name }}/values.sops.yaml', errors='ignore') | from_yaml | default({}, true) }}"

- name: "Gather the {{ shipyard_stack.name }} values"
  set_fact:
    values: "{{ default_values | combine(stack_values, recursive=true) | combine(stack_values_sops, recursive=true) }}"

- name: "Debug {{ shipyard_stack.name }} combined values"
  ansible.builtin.debug:
    var: values

- name: Ensure remote stack directory for {{ shipyard_stack.name }}
  become: true
  ansible.builtin.file:
    path: "{{ stack_remote_path }}"
    state: directory
    mode: '0700'

- name: Find stack chart templates
  delegate_to: localhost
  ansible.builtin.find:
    paths: "{{ chart_path }}/templates"
    hidden: true
  register: files

- name: "Initialize empty shipyard_stack_chart_templates array"
  set_fact:
    shipyard_stack_chart_templates: []

- name: "Load shipyard_stack_chart_templates"
  set_fact:
    shipyard_stack_chart_templates: "{{ shipyard_stack_chart_templates + [item.path | basename] }}"
  loop: "{{ files.files }}"

- name: Render stack template files to remote host
  become: true
  vars:
    # Define two top-level (hence the uppercase first character - just like Helm) variables to use in the templates
    Stack: "{{ shipyard_stack }}"
    Values: "{{ values }}"
  ansible.builtin.template:
    src: "{{ chart_path }}/templates/{{ item }}"
    dest: "{{ stack_remote_path }}/{{ item }}"
    mode: u=rw,g=r
  loop: "{{ shipyard_stack_chart_templates }}"

- name: Docker secrets are present
  become: true
  community.docker.docker_secret:
    name: "{{ item.name }}"
    data: "{{ item.data | b64encode }}"
    data_is_b64: true
    state: present
  loop: "{{ shipyard_stacks_docker_secrets|default([]) }}"

- name: Deploy shipyard stack
  become: true
  docker_stack:
    name: "{{ shipyard_stack.name }}"
    state: present
    with_registry_auth: true
    compose:
      - "{{ stack_remote_path }}/docker-compose.yml"
